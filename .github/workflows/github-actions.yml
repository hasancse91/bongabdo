name: Unit Tests

# Trigger the workflow on pull request creation, pull request update, or push to main branch.
on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Set up JDK 11 for Kotlin/Java projects (you can adjust the version if necessary)
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      # Cache Gradle dependencies (Optional, but improves build speed)
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # Run unit tests
      - name: Run Unit Tests
        run: ./gradlew test

      # Archive test results for inspection (optional step to store test reports)
      - name: Archive test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: build/test-results/test/

      # Publish test results to the pull request (Optional)
      - name: Publish Test Results
        if: always()
        uses: mikepenz/action-junit-report@v3
        with:
          report_paths: '**/build/test-results/test/TEST-*.xml'
          check_name: 'Unit Test Results'
          fail_on_failure: true
